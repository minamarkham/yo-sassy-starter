/**
 * Sass utils
 */
/**
 * Map of colors for quick grabbing.
 * See `_functions.scss` -> `color()` function.
 *
 * @type Map
 */
/**
 * Map of breakpoints for responsive design.
 * See `_functions.scss` -> `respond-to()` function.
 *
 * @type Map
 */
/** 
 * Z-indexes layers.
 * See `_functions.scss` -> `z()` function.
 * 
 * @type Map
 */
/**
 * Returns the opposite direction of every direction in `$directions`.
 * 
 * @param {List} $directions - Positions to revert
 *
 * @throws No opposite direction found for `$direction`.
 * 
 * @return {List | Null}
 */
/**
 * Clamp `$value` between `$min` and `$max`.
 * 
 * @param {Number} $value - Value to clamp between `$min` and `$max`
 * @param {Number} $min   - Minimum value
 * @param {Number} $max   - Maximum value
 *
 * @throws All parameters must be numbers for `clamp`.
 * 
 * @return {Number | Null}
 */
/**
 * Helper to manage `z-index`. 
 * Tries to fetch the z-index mapped to `$layer` in `$z-indexes` map.
 * If found, returns it, else returns `null`.
 *
 * @requires {variable} z-indexes
 *
 * @example scss
 * z-index: z("default")
 * 
 * @param {String} $layer - Layer
 *
 * @throws No z-index found for `$layer`.
 * 
 * @return {Number | Null}
 */
/**
 * Color getter.
 *
 * @requires {variable} colors
 * 
 * @example scss
 * color: color("pink");
 * 
 * @param {String} $color - Color to fetch
 *
 * @throws No color found for `$color`. Please make sure it is defined in `$colors` map.
 *
 * @return {Color | Null}
 */
/**
 * Tests whether the value is a valid length.
 * 
 * @param {*} $value - Value to test
 * 
 * @return {Bool}
 */
/**
 * Mixin to size elements.
 *
 * @param {Number} $width           - Width
 * @param {Number} $height ($width) - Height
 */
/**
 * Shorthand for positioning.
 * @link http://hugogiraudel.com/2013/08/05/offsets-sass-mixin/ Documentation
 *
 * @access private
 *
 * @requires is-valid-length
 *
 * @param {String} $position      - Position type (either `absolute`, `fixed` or `relative`)
 * @param {List}   $args     (()) - List of offsets and values
 *
 * @throws Invalid value `$next` for offset `$offset`.
 */
/**
 * Shorthand for absolute positioning.
 *
 * @link http://hugogiraudel.com/2014/05/19/new-offsets-sass-mixin/ Documentation
 *
 * @requires {mixin} position
 *
 * @param {List} $args - List of offsets and values
 */
/**
 * Shorthand for relative positioning.
 *
 * @link http://hugogiraudel.com/2014/05/19/new-offsets-sass-mixin/ Documentation
 *
 * @requires {mixin} position
 *
 * @param {List} $args - List of offsets and values
 */
/**
 * Shorthand for fixed positioning.
 *
 * @link http://hugogiraudel.com/2014/05/19/new-offsets-sass-mixin/ Documentation
 *
 * @requires {mixin} position
 *
 * @param {List} $args - List of offsets and values
 */
/**
 * Responsive manager.
 *
 * @requires {variable} breakpoints
 *
 * @param {String} $breakpoint - Breakpoint
 *
 * @throws No value found for `$breakpoint`. Please make sure it is defined in `$breakpoints` map.
 */
/**
 * Mixin to fake CSS triangles with border hacks.
 *
 * @requires {mixin} absolute
 * @requires {mixin} size
 * @requires {function} opposite-direction
 * @requires {function} z
 *
 * @param {String} $direction                - Triangle direction
 * @param {List}   $position                 - Triangle position
 * @param {Color}  $color     (currentcolor) - Triangle color
 * @param {Number} $size      (1em)          - Triangle size
 *
 * @throws Direction must be one of top, right, bottom or left.
 */
/**
 * Mixin to handle cross browser keyframes for CSS animations.
 *
 * @param {String} $name - Animation name
 */
/**
 * Mixin to prefix properties that are not prefixed by Compass
 *
 * @example
 *  @include prefixer('transform', 'translate(10px)');
 *
 * @param {String} $property                   - Property to prefix
 * @param {*}      $value                      - Value for property
 * @param {List}   $vendors  (webkit moz ms o) - Vendor prefixes to output
 */
/**
 * Mixin for cross-browser opacity (IE 8).
 * Clamps the value between 0 and 1.
 *
 * @requires {function} clamp
 *
 * @param {Number} $opacity - Opacity level, between 0 and 1
 */
/*
 * Mixin handling inline-block and vertical-align at once.
 * If no align is specified, then the `vertical-align` property won't be output.
 *
 * @param {String} $align (null) - Vertical align
 */
/**
 * Float clearing helper.
 *
 * @param {Bool} $extend (true) - Whether or not extend a placeholder.
 */
.container:after {
  content: "";
  display: table;
  clear: both;
}

/**
 * Accessibility hiding helper.
 *
 * @param {Bool} $extend (true) - Whether or not extend a placeholder.
 *
 * @requires {mixin} size
 */
.visually-hidden {
  width: 1px;
  height: 1px;
  position: absolute;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}

/**
 * Vendors
 */
/* http://prismjs.com/download.html?themes=prism&languages=css+scss */
/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */
code[class*="language-"],
pre[class*="language-"] {
  color: black;
  text-shadow: 0 1px white;
  font-family: Consolas, Monaco, 'Andale Mono', monospace;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  -moz-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: #b3d4fc;
}

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
  text-shadow: none;
  background: #b3d4fc;
}

@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none;
  }
}
/* Code blocks */
pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: white;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray;
}

.token.punctuation {
  color: #999;
}

.namespace {
  opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol {
  color: #905;
}

.token.selector,
.token.attr-name,
.token.string,
.token.builtin {
  color: #690;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
  color: #a67f59;
  background: rgba(255, 255, 255, 0.5);
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a;
}

.token.regex,
.token.important {
  color: #e90;
}

.token.important {
  font-weight: bold;
}

.token.entity {
  cursor: help;
}

/**
 * Base stuff
 */
/**
 * Univeral box-sizing reset
 */
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/**
 * Body rules
 */
body {
  font: 1em/1.35 'Ubuntu', 'Helvetica', sans-serif;
  overflow: auto;
  margin: 0;
  background-color: #f7f5fa;
}
@media (min-width: 601px) {
  body {
    background: -webkit-gradient(linear, left top, right top, color-stop(50%, #444444), color-stop(50%, #f7f5fa));
    background: -webkit-linear-gradient(left, #444444 50%, #f7f5fa 50%);
    background: linear-gradient(to right, #444444 50%, #f7f5fa 50%);
  }
}

/**
 * Links
 */
a {
  -webkit-transition: .15s;
          transition: .15s;
  text-decoration: none;
  color: #c6538c;
}
a:hover, a:hover code {
  color: #444444;
}

/**
 * Code
 */
:not(pre) > code {
  padding: 2px 4px;
  color: #c6538c;
  background-color: white;
  white-space: nowrap;
  border-radius: 3px;
  border: solid 1px #DAD3D6;
}

/**
 * Tables
 */
@media (max-width: 600px) {
  table, tbody, tr, td, th {
    display: block;
  }

  thead {
    width: 1px;
    height: 1px;
    position: absolute;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    border: 0;
  }

  tr {
    padding-bottom: 1em;
    margin-bottom: 1em;
    border-bottom: 2px solid #dddddd;
  }

  td, th {
    padding-left: 0 !important;
  }
  td::before, th::before {
    content: attr(data-label) ": ";
    text-transform: capitalize;
    font-weight: bold;
  }
  td p, th p {
    display: inline;
  }
}
/**
 * Lists
 */
.list-unstyled {
  padding-left: 0;
  list-style: none;
}

/**
 * Main container
 */
.container {
  max-width: 100%;
  width: 1170px;
  margin: 0 auto;
  padding: 0 1em;
}

/**
 * Visually-hidden
 */
/**
 * Partials
 */
/**
 * Header
 */
.header {
  padding: 1em;
  background: #c6538c;
  color: #f7f5fa;
}
@media (min-width: 601px) {
  .header {
    border-bottom: 0.5em solid #f7f5fa;
  }
}

/**
 * Main title
 */
.header__title {
  font-size: 1em;
  margin: 0;
  float: left;
  font-weight: 500;
}
.header__title a {
  color: #f7f5fa;
}

/**
 * Item count
 */
.header__item-count {
  float: right;
  margin: 0;
}

/**
 * Sidebar
 */
.sidebar {
  background: #444444;
  padding: 1em 0;
  position: relative;
}
.sidebar::after, .sidebar::before {
  position: absolute;
  top: 0;
  right: 100%;
  bottom: 0;
  content: '';
  background: #444444;
  width: 1em;
}
.sidebar::before {
  left: 100%;
}
@media (min-width: 601px) {
  .sidebar {
    width: 25%;
    float: left;
    text-align: right;
    padding: 2.5em 0;
  }
  .sidebar::before, .sidebar::after {
    content: none;
  }
}

/**
 * Private and alias annotations
 */
.sidebar__annotation {
  color: #998099;
}

/**
 * Sidebar content
 */
.sidebar__body {
  padding: .5em 0;
  margin-bottom: 1em;
  color: #f7f5fa;
}
.sidebar__body li {
  background: #444444;
  position: relative;
  padding: .5em 2em .5em .5em;
  border-top: 1px solid #555;
  border-bottom: 1px solid #333;
  -webkit-transition: .15s;
          transition: .15s;
}
.sidebar__body li::before {
  content: '';
  position: absolute;
  top: -1px;
  right: 100%;
  bottom: -1px;
  width: 100em;
  border: inherit;
  background: inherit;
}
.sidebar__body li:hover {
  background: #4a4a4a;
}
.sidebar__body a {
  color: #f7f5fa;
  text-decoration: none;
}
.sidebar__body a:hover {
  color: #669999;
}

/**
 * Sidebar heading
 */
.sidebar__heading {
  color: #f7f5fa;
  font-size: 1.2em;
  margin: 0;
  padding-right: 1.6em;
  text-transform: uppercase;
}

/**
 * List item heading
 */
li.sidebar__sub-heading {
  background: #f7f5fa;
  position: relative;
  border-color: #f7f5fa;
}
li.sidebar__sub-heading:hover {
  background: #f7f5fa;
}
li.sidebar__sub-heading a {
  color: #444444;
  text-transform: uppercase;
}

/**
 * Project description
 */
.sidebar__description {
  color: #f7f5fa;
  padding-right: 2em;
}

/**
 * Main wrapper
 */
.main {
  background: #f7f5fa;
  position: relative;
  padding-bottom: 3em;
}
@media (min-width: 601px) {
  .main {
    padding-left: 2em;
    width: 75%;
    float: right;
    padding-top: .9em;
    min-height: 45em;
  }
}

/**
 * Main titles
 */
.main__heading {
  color: #444444;
  padding: .5em;
  margin-top: 0;
  text-transform: uppercase;
  border-bottom: 0.3em solid #c6538c;
  font-size: 2em;
}
@media (min-width: 601px) {
  .main__heading {
    padding: .5em 0;
  }
}

/**
 * Footer
 */
.footer {
  background: #f7f5fa;
  padding: 1em 0;
}

/**
 * Project info
 */
.footer__project-info {
  float: left;
}

/**
 * "Built with SassDoc" mark.
 */
.footer__watermark {
  float: right;
}

/**
 * Make all three spans inline-blocks
 */
.project-info__name,
.project-info__version,
.project-info__license {
  display: inline-block;
}

/**
 * Make extra informations less prominent
 */
.project-info__version,
.project-info__license {
  color: #555;
}

/**
 * Negates a space width
 */
.project-info__license {
  text-indent: -.25em;
}

/**
 * Item
 */
.item + .item {
  margin: 4em 0;
}
.item p {
  margin: 0 0 .5em 0;
}

/**
 * Name
 */
.item__name {
  color: #444444;
}

/**
 * Code blocks
 */
.item__code {
  border-left: 0.3em solid #c6538c;
  word-wrap: break-word;
  margin-top: 1em !important;
  line-height: 1.42;
}

/**
 * Anchor
 */
.item__anchor {
  font-size: .6em;
  color: #dfa0bf;
}
@media (min-width: 601px) {
  .item__anchor {
    position: absolute;
    right: 101%;
    bottom: 0.25em;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    opacity: 0;
  }
  .item:hover .item__anchor {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
    opacity: 1;
  }
}

/**
 * Deprecated flag
 */
.item__deprecated strong {
  color: #cc0000;
  text-transform: uppercase;
}

/**
 * Type
 */
.item__type {
  color: #dddddd;
  text-transform: capitalize;
  font-size: .75em;
}

/**
 * Aliases
 */
.item__alias,
.item__aliased {
  color: #dddddd;
  font-size: .8em;
}

.item__sub-heading {
  color: #669999;
  margin-bottom: .5em;
  margin-top: 1em;
  text-transform: uppercase;
  font-size: 1em;
}

/**
 * Function name
 */
.item__heading {
  color: #444444;
  font-size: 2.2em;
  margin: 0 0 .5em 0;
  font-weight: normal;
  position: relative;
}

/**
 * Parameters table
 */
.item__parameters {
  width: 100%;
  margin-bottom: 1em;
  border-collapse: collapse;
}
.item__parameters thead th {
  vertical-align: bottom;
  border-bottom: 2px solid #dddddd;
  border-top: none;
  text-align: left;
}
.item__parameters tbody th {
  text-align: left;
}
.item__parameters td, .item__parameters th {
  padding: .5em;
  vertical-align: top;
}

@media (min-width: 601px) {
  tbody > .item__parameter:first-of-type > td {
    border-top: none;
  }

  .item__parameters td,
  .item__parameters th {
    border-top: 1px solid #dddddd;
  }
  .item__parameters td:first-of-type,
  .item__parameters th:first-of-type {
    padding-left: 0;
  }
}
/**
 * Scope/access
 */
.item__access {
  text-transform: capitalize;
  color: #998099;
  font-size: .8em;
}

/**
 * Since
 */
.item__since {
  float: right;
  font-size: .5em;
  padding-top: .9em;
  color: #c4c4c4;
}
